package com.austinsenft.test;

import java.util.ArrayList;
import java.util.Date;

import com.austinsenft.caresoftinterfaces.HIPAACompliantAdmin;
import com.austinsenft.caresoftinterfaces.HIPAACompliantUser;

public class AdminUser extends User implements HIPAACompliantUser, HIPAACompliantAdmin {

	// Member Variables
	private Integer employeeID;
	private String role;
	private ArrayList<String> securityIncidents;
	
    public AdminUser(Integer id, String role) {
    	super(id);
    	this.role = role;
    	this.securityIncidents = null; 
    }

 
    
    // TO DO: Implement a constructor that takes an ID and a role
    // TO DO: Implement HIPAACompliantUser!
    // TO DO: Implement HIPAACompliantAdmin!
    
    public void newIncident(String notes) {
        String report = String.format(
            "Datetime Submitted: %s \n,  Reported By ID: %s\n Notes: %s \n", 
            new Date(), this.id, notes
        );
        securityIncidents.add(report);
    }
    public void authIncident() {
        String report = String.format(
            "Datetime Submitted: %s \n,  ID: %s\n Notes: %s \n", 
            new Date(), this.id, "AUTHORIZATION ATTEMPT FAILED FOR THIS USER"
        );
        securityIncidents.add(report);
    }

	
	@Override
	public boolean assignPin(int pin) {
		// Pin must be 6 digits or more; returns false if not
		// Expected to assign the pin to the user (as a member variable)
		String pinString = Integer.toString(pin);
		if(pinString.length() < 6) {
			return false;
		}
		this.pin = pin;
		return true;
	}

	@Override
	public boolean accessAuthorized(Integer confirmedAuthID) {
		// Compares the ids, and if they are not a match,
		// creates an incident report using the authIncident method,
		// Returns true if ids match, false if not.
		
		if(this.pin == confirmedAuthID) {
			return true;
		}
		else {
			reportSecurityIncidents();
			return false;
		}
	}

	@Override
	public ArrayList<String> reportSecurityIncidents() {
		Date()
		return null;
	}

}
